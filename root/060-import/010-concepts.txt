title: Concepts
long_title: Data import concepts
--

Haplo applications are highly configurable, so the schema of each application will be unique. The framework handles this by providing generic ways of describing and mapping data, along with a user interface to describe the data model in your application.

Key concepts are described below.

h2. Model

The *Model* describes the schema and data structures within the Haplo application.

Application developers configure their plugins to expose relevant parts of the object store schema and plugin specific data structures.

Each model has a name, for example @haplo:person@ is the standard model describing a person and their associated data. The model is built up by the installed plugins, each providing a description of their model and the mechanism for importing the data.

To explore a Model, start by choosing _Data import_ from the main menu.

CLICK_PATH TOOLS > Data import > Models


h2. Destination

The *Model* contains one or more *Destinations* which describe the data model. Destinations are roughly equivalent to tables in a relational database.

For example, the user sync plugin provides Destinations for the user account, their 'profile' (a store object which describes the person), and other plugins extend this Model with other Destinations, for example, the user's project.

Destinations can be used to create new objects and other data in your application, or update existing data.


h2. Name

A *Destination* contains one or more *Names*, which describe the values that can be stored in that Destination. Names are roughly equivalent to the columns in a relational database, although they tend to be multivalue.

The Name might describe an attribute of a store object (for example, a person's email address on their profile), or a property of a JavaScript object.


h2. Control

The *Control* is a JSON file which describes a data import. This includes:

* the name of the *Model* that the import is using,
* the format of the input files,
* data transformations and mappings,
* *Instructions* describing how to use the data from the input files.


h2. Instruction

The *Control* file contains instructions on how to interpret the data, with limited support for conditionals and looping.

These instructions describe how to take the data from the input files, transform them, and apply them to *Names* within the *Destinations*.


h2. Batch

A *Batch* is is made up of a collection of input files and a *Control* file which are imported into an application.

Batches may be a one-off import, a regular import to synchronise data in a user sync, or represent a single transaction when a REST API is called.


h2. Record

The input files in a *Batch* contain *Records*, which are distinct collections of data representing one 'thing'. This can range in complexity from a single row from a database table, to a complex JSON structure describing a person and their project.



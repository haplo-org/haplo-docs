title: Aliased attribute
--

@aliased-attribute@ declarations define aliased attributes, used on types. This declaration defines the standard Name alias for Title, using different qualifiers and the @person-name@ data type. It's made available as @AA.Name@.

<pre>
aliased-attribute std:aliased-attribute:name as Name
    title: Name
    search-name: name
    alias-of dc:attribute:title
    on-qualifier std:qualifier:null
    on-qualifier dc:qualifier:alternative
    on-qualifier std:qualifier:nickname
    on-data-type person-name
</pre>

Aliases can be restricted to apply only under specific circumstances, such as when a specific qualifier or data type is used for a given attribute value. The object editor will display values under the aliased labels only if one of these filters apply, these filters may be applied using the following keys:

|_.Key|_.Alias applicable when|
|@on-qualifier@|The value uses this qualifier|
|@on-data-type@|Values are of this data type|
|@on-linked-type@|When the linked object is of this type (for link data type attributes)|

@aliased-attributes@ can be added to types in place of, or alongside, the attribute that is being aliased and the filters also dictate how that field behaves in the object editor. For example, when using @on-linked-type@ the field in the object editor will only allow objects of the listed types to be selected, when using @on-qualifier@ will restrict the allowed qualifiers for that field to those listed. When these filters are applied the @qualifiers@ & @linked-types@ from the attribute being aliased are *not* inherited.
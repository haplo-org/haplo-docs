title: Metadata schema
--

Haplo’s data model is a linked data (semantic web) inspired object store. It’s an innovative mix of a graph database, object store, and search engine. Every field is multi-value, and hierarchical relationships are supported everywhere they’re needed.

Haplo can represent any type of information in a single repository. It is ideal for managing datasets, traditional and non-traditional output types together within the same system with different attributes used by different output types.

Haplo’s shared schema support enables a repository to incorporate both industry standard metadata schemas and custom metadata for each type of output.

Haplo has the flexibility to support new templates for new output types at any time, and for attributes to be added or removed from type templates without loss of data.

h2. Configuring the schema

Additional attributes, qualifiers, and types can be added to the default repository schema in two ways:

h3. Setting up schema requirements files (preferred)

You can define an application-specific [node:plugin/schema/requirements-schema:requirements file], to be installed with your system. This will automatically update the schema in the system, allowing you to keep your schema in version control and apply it to systems through a deployment process.

h3. Using System Management

In a running application, adminstrators are able to edit the schema through the System Management interface.

Once changes have been made, you can use the [node:plugin/schema/requirements-schema#requirements-generator-tool:requirements generator tool] to create a schema file that can be saved in source control. 

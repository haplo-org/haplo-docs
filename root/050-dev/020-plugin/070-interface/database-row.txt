title: DatabaseRow
long_title: DatabaseRow interface
link_as: keyword
--

A JavaScript object implementing the @DatabaseRow@ interface provides access to a row of data in a table in a relational style database.


h2. Construction

Use [node:dev/plugin/interface/database-table#create] or [node:dev/plugin/interface/database-table#load] on a [node:dev/plugin/interface/database-table] object.

Access elements of a [node:dev/plugin/interface/database-query] object.


h2. Interface

h3(property). id

The numeric ID of this row in the table.


h3(function). save()

Save a new row, or changes to an existing row, to the database.

Returns itself.


h3(function). deleteObject()

Deletes this row from the table.

Don't load a @DatabaseRow@ object just to call @deleteObject()@. Call @deleteRow()@ on the [node:dev/plugin/interface/database-table] object instead.

The name of this function is @deleteObject()@ not @deleteRow()@ for consistency with other interfaces in this API.

Returns @true@ if the row was deleted.


h3(property). properties for defined fields

A property is defined for each field defined in the @fields@ argument to @create()@ on the [node:dev/plugin/interface/database] object.

For example, if you define a field called @example@, the rows will have an @example@ property.

When a property is set, the type of the value is checked. Invalidate values will cause an exception to be thrown.


h3(function). user defined functions

Functions defined in the @methods@ argument to @create()@ on the [node:dev/plugin/interface/database] object are available in every row object.


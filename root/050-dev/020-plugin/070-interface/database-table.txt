title: DatabaseTable
long_title: DatabaseTable interface
link_as: keyword
--

A JavaScript object implementing the @DatabaseTable@ interface provides access to a table in a relational style database.


h2. Construction

@DatabaseTable@ objects cannot be directly created.

Use the [node:dev/plugin/interface/database#table] function on a [node:dev/plugin/interface/database] object to create a named property on that object.


h2. Interface

h3(property). name

The name of the database table.


h3(function). create(initialValues)

Create a new [node:dev/plugin/interface/database-row] object, representing a potential new row in the table. The row is only stored when you call @save()@ on the returned object.

The optional @initialValues@ argument is a JavaScript @Object@ used as a dictionary of field name to field value.


h3(function). load(id)

Load a row, given the ID of a row. Return a [node:dev/plugin/interface/database-row] object.


h3(function). select()

Returns a new [node:dev/plugin/interface/database-query] object for selecting rows from the table.


h3(function). deleteRow(id)

Delete the row given the row ID.

If you have a [node:dev/plugin/interface/database-row], you can also call @deleteObject()@ on it.

Returns @true@ if the row was deleted.


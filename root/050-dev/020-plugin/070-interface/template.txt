title: Template
long_title: Template interface
link_as: keyword
--

A JavaScript object implementing the @Template@ interface represents a template for generating textual data, such as HTML for displaying to the user.

See [node:dev/plugin/templates] for how to use @Template@ objects.


h2. Construction

Obtain a @Template@ object using the [node:dev/plugin/interface/plugin/response-generation#template] function in [node:dev/plugin/interface/plugin].


h2. Interface

h3(property). kind

The kind of output this will produce, for example, @"html"@. The value may be @null@.

This property can be used to set the @kind@ property of a HTTP [node:dev/plugin/interface/response] object. This is done automatically when using the @render()@ function on an [node:dev/plugin/interface/exchange] object.


h3(function). render(view)

Render the template, returning a @String@.

@view@ is a JavaScript @Object@ used as a dictionary to provide parameters for the template rendering.

If you're generating HTML to include in another template, prefer using @deferredRender()@ and the [node:dev/plugin/templates/functions/language#render] template function.


h3(function). deferredRender(view)

Return an object which can be used with the [node:dev/plugin/templates/functions/language#render] template function. At the point the @render()@ template function is rendered, this template will be rendered with the given view.

See [node:dev/plugin/templates/including-templates#Deferred_rendering] for how to use @deferredRender()@.

title: typecode queries
--

The @typecode@ identifies the kind of value stored in a [node:dev/plugin/interface/store-object].

To find the kind of value, use @O.typecode()@ to determine the typecode, and compare against the [node:dev/plugin/o/constants/value-types:value] or [node:dev/plugin/o/constants/text-types:text types].

Using @O.typecode()@ repeatedly is slow, so try to avoid using it in loops. Faster alternatives for the most common queries are provided. To test if something is a [node:dev/plugin/interface/ref] or [node:dev/plugin/interface/text], use @O.isRef()@ or @O.isText()@ respectively.


h3(function). O.typecode(value)

Returns the @typecode@ of the @value@.

Returns @null@ if the value cannot be stored in a @StoreObject@.

It will return @O.T_TEXT@ if a @String@ object is tested. This is a convenience as @String@ objects are automatically converted to @Text@ objects when added to a @StoreObject@.

Because JavaScript represents all numbers as floating point, the difference between integers and floating point numbers is a little hard to determine. @O.typecode()@ returns @O.T_INTEGER@ when the number is an integer, and @O.T_NUMBER@ if it has a fractional part. Be careful of this distinction. @typeof(value)==="number"@ may be a more useful test in some circumstances.

@O.T_DATETIME@ will be returned for JavaScript @Date@ objects in addition to proper [node:dev/plugin/interface/date-time] objects, since both can be used with the @append()@ functions on a [node:dev/plugin/interface/store-object].


h3(function). O.isRef(value)

Returns @true@ if value is a [node:dev/plugin/interface/ref] object.


h3(function). O.isText(value)

Returns @true@ if value is a [node:dev/plugin/interface/text] object.

Note it will *not* return @true@ if a @String@ is tested.


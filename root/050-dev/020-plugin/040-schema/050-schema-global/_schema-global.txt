title: SCHEMA (global)
long_title: SCHEMA (JavaScript global)
class: DocNodeTextileWithTOC
--

The JavaScript global @SCHEMA@ contains dictionaries defining the schema for the application. The entries will depend on the configuration of the application, and will be different for each application.

Use the properties as constants to find the types, attributes, groups, and so on, which your plugin uses for configuration and querying the object store. The names of the properties are the 'API codes' of each of these entities. For example:

<pre>language=javascript
    var object = O.object();
    object.appendType(TYPE["std:type:book"]);
    object.appendTitle("Example");
    object.append(authorRef, ATTR["dc:attribute:author"]);
</pre>

To make your code easier to read, you should use [node:dev/plugin/schema/local-schema:plugin local schema dictionaries]. This could enable you to write:

<pre>language=javascript
    var object = O.object();
    object.appendType(T.Book);
    object.appendTitle("Example");
    object.append(authorRef, A.Author);
</pre>

As well as the schema objects, [node:dev/plugin/schema/schema-global/query:schema query functions] are provided to retrieve details of the schema.

h2. Dictionaries

Each of the dictionaries is also available as a JavaScript global, so you can write either @SCHEMA.ATTR@ or @ATTR@. The latter is recommended.
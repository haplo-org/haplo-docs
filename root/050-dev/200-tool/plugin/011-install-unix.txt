title: Installation (UNIX or Mac)
--

The plugin tool requires a little bit of setup. These instructions work on Mac OS X and UNIX-like operating systems, such as Linux.


h3. Create a working folder

Create a folder anywhere on your hard disc. We'll be using the example of @/Users/developer/haplo-development@ for simplicity. This working folder should be the root of your source control repository.

Open a Terminal window, and @cd@ to that directory.


h3. Check Java is installed.

In the command prompt, type @java -version@

You must have Java 8 or later. The version number shown will be prefixed with '1.', so Java 8's version will be shown as '1.8'.

If you get an error, or need to update to Java 8, download "Java":https://java.com and install it in the default folder. Repeat the @java -version@ command to check it installed correctly.

If you are using a Linux system, your package manager should be able to install Java 8 for you.


h3. Download JRuby

Download the current release of "JRuby":http://jruby.org/download, which must be version 9.0.5.0 or later. Choose the "binary .tar.gz" version.

Decompress the downloaded file, then rename the extracted folder to @jruby@ (without the version number):

<pre>
    tar zxf ruby-bin-9.0.5.0.tar.gz
    mv jruby-9.0.5.0 jruby
</pre>


h3. Install the Plugin Tool

The Plugin Tool is distributed as a Ruby Gem.

Return to the Terminal window you opened. Type

<pre>
    export PATH=`pwd`/jruby/bin:$PATH
    jgem install haplo
</pre>

(This assumes you're running these commands with the current working directory set to the directory containing @jruby@.)


h3. Create a project folder

Create a folder inside your working folder, for example, @/Users/developer/haplo-development/example-project@, and @cd@ to it. In the @cmd@ window, type

<pre>
    mkdir example-project
    cd example-project
</pre>


h3. Check the installation works

Type @haplo-plugin --help@ to check the plugin tool is installed correctly.

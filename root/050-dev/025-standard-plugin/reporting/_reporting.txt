title: Reporting
--

Plugin name: @std_reporting@

The standard Reporting plugin provides the ability to generate reports based on historical data from many different sources.

h2. Overview

While any plugin can add to a collection, the plugin that defines the collection should be the "owning" plugin. Other plugins should take care not to use any names that may be used by the owning plugin or any other plugin. One way to do this is to prepend a short string related to the plugin adding to the collection before the fact name.

h2. Terminology

 * Facts: a set of facts & figures about a [node:dev/plugin/interface/store-object:StoreObject], implemented as fields in a [node:dev/plugin/interface/database:Database] table

 * Collection: a collection of facts about an object

 * Collection category: a collection is in one or more categories, which allows setup of common functionality

 * Statistic: a single value derived from a subset of rows in the collection, optionally grouped by other facts

 * Dashboard: a subset of facts from a collection displayed on a web page, with a potentially different set of facts generated for a spreadsheet export

h2. Using the Reporting plugin

The Reporting plugin provides a @std:reporting@ [node:dev/plugin/interface/plugin/platform-interface#provideFeature:feature] which your plugin must [node:dev/plugin/plugin-json#use:use] in your @plugin.json@ file.

<pre>language=json
{
  "pluginName": "example_workflow",
  // ... rest of plugin.json
  "use": ["std:reporting"]
}
</pre>


